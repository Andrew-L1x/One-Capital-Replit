name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        node-version: [18.x]
        rust-version: [stable]

    steps:
    - uses: actions/checkout@v3

    # Setup Node.js
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    # Install Node dependencies
    - name: Install dependencies
      run: npm ci

    # Type check
    - name: TypeScript Check
      run: npx tsc --noEmit

    # Lint
    - name: Lint check
      run: npx eslint . --ext .ts,.tsx

    # Setup Rust toolchain
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.rust-version }}
        target: wasm32-unknown-unknown
        override: true

    # Build WASM contract
    - name: Build WASM contract
      run: |
        cd rust-contracts
        cargo build --target wasm32-unknown-unknown --release
      
    # Setup database for tests
    - name: Setup database
      run: npm run db:push

    # Run backend tests
    - name: Run backend tests
      run: npm test -- server/

    # Run frontend tests
    - name: Run frontend tests
      run: npm test -- client/

    # Run E2E tests
    - name: Install Playwright
      run: npx playwright install --with-deps
      
    - name: Run E2E tests
      run: npx playwright test
      working-directory: testing/e2e